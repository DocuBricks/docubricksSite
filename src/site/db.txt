DROP TABLE docubricks_document;
DROP TABLE docubricks_user;
DROP TABLE docubricks_document_tags;
DROP TABLE docubricks_document_comment;





CREATE TABLE docubricks_user
(
  user_id		SERIAL PRIMARY KEY,
  
  user_email 	text PRIMARY KEY,
  user_password text NOT NULL,
  user_name 	text NOT NULL,
  user_surname 	text NOT NULL,
  user_timecreated bigint NOT NULL,  
  user_orcid 	text NOT NULL,
  
  user_passresetcode TEXT,
  user_passresettime BIGINT,
  
  user_isadmin  bool NOT NULL
);

create sequence docubricks_user_id_seq;  //Surprisingly, this is the one used by ORMlite
Select setval('docubricks_user_id_seq', 10 );

ALTER TABLE docubricks_user ADD user_id SERIAL;
ALTER TABLE docubricks_user DROP constraint docubricks_user_pkey;
ALTER TABLE docubricks_user ADD PRIMARY KEY (user_id);
alter table docubricks_user alter user_id set default nextval('docubricks_document_id_seq');

/////// New fields
ALTER TABLE docubricks_user ADD user_passresetcode TEXT;
ALTER TABLE docubricks_user ADD user_passresettime BIGINT;






CREATE TABLE docubricks_document
(
//  document_nid          SERIAL PRIMARY KEY,

  document_id			bigint PRIMARY KEY,
  document_timecreated	bigint NOT NULL,
  document_xml			text NOT NULL,
  //document_owner		text not null,
  
  document_ownerid		int  , //not null,

  document_ispublic		BOOLEAN NOT NULL,
  document_isfrozen		BOOLEAN NOT NULL,
  
  document_name			TEXT NOT NULL,
  document_image		text NOT NULL,
  document_desc			text NOT NULL,
  document_tags			text NOT NULL, //Comma-separated. Not very SQL - sort out later
  document_shortlink    text NOT NULL
);

//////// Transfer ID to use
ALTER TABLE docubricks_document ADD document_ownerid int;
UPDATE docubricks_document
SET document_ownerid = (SELECT user_id FROM docubricks_user WHERE user_email=document_owner);
ALTER TABLE docubricks_document DROP document_owner;

/////// Document ID update for serial
create sequence docubricks_document_id_seq;
alter table docubricks_document alter document_id set default nextval('docubricks_document_id_seq');
Select setval('docubricks_document_id_seq', 2000051 );

//////// New fields
ALTER TABLE docubricks_document ADD document_tags TEXT;
UPDATE docubricks_document SET document_tags='';
ALTER TABLE docubricks_document ADD document_ispublic BOOLEAN;
UPDATE docubricks_document SET document_ispublic=TRUE;
ALTER TABLE docubricks_document ADD document_isfrozen BOOLEAN;
UPDATE docubricks_document SET document_isfrozen=FALSE;






CREATE TABLE docubricks_document_tags
(
  tag_id				SERIAL PRIMARY KEY,
  document_id			bigint,
  document_tag			text NOT NULL,
  FOREIGN KEY (document_id) REFERENCES docubricks_document(document_id)
);
create sequence docubricks_document_tags_id_seq;
alter table docubricks_document_tags alter tag_id set default nextval('docubricks_document_tags_id_seq');
////////// the ORM needs this sequence





CREATE TABLE docubricks_document_comment
(
  comment_id			bigint	PRIMARY KEY,
  document_id			bigint	NOT NULL,
  brick_id				text	NOT NULL,
  comment_timecreated	bigint	NOT NULL,
  comment_user			text	NOT NULL,
  comment_text			text	NOT NULL
);


GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO mahogny;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO mahogny;


#  CONSTRAINT docubricks_document_brick_owner_fkey FOREIGN KEY (brick_owner)
#      REFERENCES docubricks_user (user_email) MATCH SIMPLE
#      ON UPDATE NO ACTION ON DELETE NO ACTION;





//////////////////// CRAP ///////////////////////



ALTER TABLE docubricks_document ADD document_nid SERIAL;
ALTER TABLE docubricks_document DROP constraint docubricks_document_pkey;
ALTER TABLE docubricks_document ADD PRIMARY KEY (document_nid);


ALTER TABLE docubricks_document DROP document_nid;
ALTER TABLE docubricks_document ADD PRIMARY KEY (document_id);


create sequence docubricks_document_id_seq;
ALTER TABLE bagger
        ALTER COLUMN document_id TYPE SERIAL USING document_id::integer
        , ALTER COLUMN player_id SET NOT NULL
        , ALTER COLUMN player_id SET DEFAULT nextval('player_id_seq')
        ;
ALTER SEQUENCE player_id_seq
        OWNED BY bagger.player_id
        ;
   --
   -- reset the sequence to containe the maximum occuring player_id in the table
   --
SELECT setval('player_id_seq', mx.mx)
FROM (SELECT MAX(player_id) AS mx FROM bagger) mx
        ;
SELECT * FROM bagger;
\d bagger
